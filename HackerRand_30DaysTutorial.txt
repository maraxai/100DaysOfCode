//HackerRand 30 Day Tutorial 

///////////////////
// Day 1 Data Types
///////////////////

// Declare second integer, double, and String variables.
    var i2;
    var d2;
    var s2;
    // Read and save an integer, double, and String to your variables.
    i2 = parseInt(readLine());
    d2 = parseFloat(readLine());
    s2 = readLine();
    // Print the sum of both integer variables on a new line.
    console.log(i + i2);
    // Print the sum of the double variables on a new line.
    console.log((d + d2).toFixed(1));
    // Concatenate and print the String variables on a new line
    // The 's' variable above should be printed first.
    console.log(s + s2);
}

//////////////////
// Day 2 Operators
/////////////////

// Complete the solve function below.
function solve(meal_cost, tip_percent, tax_percent) {
    const tip = meal_cost * tip_percent / 100;
    const tax = meal_cost * tax_percent / 100;

    const total = Math.round(meal_cost + tip + tax)
    console.log(total);
}

////////////
// Day 3 - entry missing but done
////////////

//////////////
// Day 4 Class vs. Instance
/////////////

function Person(initialAge){
    // Add some more code to run some checks on initialAge
    if (initialAge < 0) {
        console.log('Age is not valid, setting age to 0.')
    }

  this.amIOld=function(){
   // Do some computations in here and print out the correct statement to the console
    if (initialAge < 13) {
      console.log('You are young.')
    } else if (initialAge >= 13 && initialAge < 18) {
        console.log('You are a teenager.')
    } else if (initialAge >= 18) {
        console.log('You are old.')
    }

  };
    this.yearPasses = function () {
        // Increment the age of the person in here
        return initialAge += 1;
   };
}

/////////////////
// Day 5
/////////////////
function main() {
    const n = parseInt(readLine(), 10);
///below 
    for (var i = 1; i <= 10; i++) {
    console.log(`${n} x ${i} = ${n * i}`);
    }
}

/////////////////
// Day 6
/////////////////
mixed exercises


/////////////////
// Day 7
/////////////////
https://www.hackerrank.com/challenges/30-review-loop/problem
function processData(input) {
    var container = [];
    var arr = input.split(' ');
    var N = arr.shift();
    var even = [];
    var odd = [];

    for (var i = 0; i < N; i++) {
        container.push(arr[i].split(''));
    }

    for (var j = 0; j < container.length; j++) {
        container[j].map((letter, index) => index % 2 == 0 ? even.push(letter) : odd.push(letter));
        console.log(even.join('') + ' ' + odd.join(''));
        even.splice(0);
        odd.splice(0);
    }
}



/////////////////
// Day 9
/////////////////
function factorial(n) {
    for (var i = n - 1; i >= 1; i--) { 
        n *= i;
    }
    return n;
}













/////////////////
// 10Day Tutorial Day 3
/////////////////
5. Get the second largest number in an array and return this number. The array has multiple, same numbers, e.g. var arr + [1,2,1,2,3,2,4,3,6]
function getSecondLargest(nums) {
    // Complete the function
var result = nums.filter((item, i) => nums.indexOf(item) === i);
result.sort();
var n = result.length;
var Number = result[n-2];
return Number;
}




//////////////////
// 10Day Tutorial Day 5
//////////////////
https://www.hackerrank.com/challenges/js10-arrows/problem

The transformation from ES5 to ES6 arrow function, broken down in steps


'For better understanding .. every new method is a modification of previous method.. This is how it helped me understand the arrow function.'

//method 1
function modifyArray(nums) {
    var something = function(n){
        if(n%2==0)
            return n*2;
        else
            return n*3;
    }
    var newArray = nums.map(something);
    return newArray;
    
}

// method 2
function modifyArray(nums) {
    var something = function(n){
        var a = (n%2==0) ? n*2: n*3;
        return a;
    }
    var newArray = nums.map(something);
    return newArray;
    
}

//method 3
function modifyArray(nums) {
    var something = n => n = (n%2==0) ? n*2: n*3;
    var newArray = nums.map(something);
    return newArray;
    
}

//method 4
function modifyArray(nums) {
    var newArray = nums.map(n => n = (n%2==0) ? n*2: n*3);
    return newArray;
    
}

//method 5
function modifyArray(nums) {
    return nums.map(n => n = (n%2==0) ? n*2: n*3);   
}

/////////////////
//
//////////////// 